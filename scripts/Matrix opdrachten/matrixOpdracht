# in dit programma wil ik dat self en 2 als objecten kunnen worden vermenigvuldigd, opgeteld en worden afgetrokken. Het resultaat komt in matrix3 
# ik houd er rekeningn mee dat ook later nog andere mutaties moeten kunnen worden toegevoegd... als dat lukt dan he... want ik snap er echt de ballen van...
# bedoel... heb weleens in het duister getast maar de tering waarom dit niet wil landen bij me... Achja ik kan ook natuurlijk drugsgebruiker worden ofzo... kom der wel...


class Matrix:
    def __init__(self, vectorList):
        self.vectorList = vectorList


    def __mul__(self, matrix2):
        vectorList3 = []
        vectorList2 = matrix2.vectorList
        if len(self.vectorList[0]) == len (vectorList2):
            for rowIndex in range(len(self.vectorList)):
                for collumIndex in range(len(vectorList2[0])):
                    for itteraties in range(len(self.vectorList[0])):
                        vectorList3[rowIndex][collumIndex] += self.vectorList[rowIndex][itteraties] * vectorList2[itteraties][collumIndex]
        else:  
            print ("NEE JOH, dat kan helemaal niet, het aantal kolommen van de eerste matrix moet gelijk zijn aan het aantal rijen van de tweede")
        return Matrix(vectorList3)
    
    
    # def __add__(self,matrix2):
    #     if ((len(self)) == (len(matrix2))) and ((len(self[0]))==(len(matrix2[0]))):
    #         matrix3 = [[self[R][C] + matrix2[R][C] for C in range(len(self[0]))]for R in range(len(self))]#C zijn rijen (rows) en R over kolommen (collums), en zijn hier verkeerd om gebruikt omdat ik dom ben en god niet bestaat...
    #         print(f"Lekker bezig hier komt de volgende matrix uit:",{matrix3})
    #     else:
    #         print ("Zeg, die matrixen van jou... vind je daar nou zelf van? Moeten natuurlijk dezelfde dimensies hebben om te worden opgeteld bij elkaar... suffert")
    #     return matrix3


    # def __sub__(self,matrix2):
    #     if ((len(self)) == (len(matrix2))) and ((len(self[0]))==(len(matrix2[0]))):
    #         matrix3 = [[self[R][C] - matrix2[R][C] for C in range(len(self[0]))]for R in range(len(self))]
    #         print(f"Lekker bezig hier komt de volgende matrix uit:",{matrix3})
    #     else:
    #         print ("Zeg, die matrixen van jou... vind je daar nou zelf van? Moeten natuurlijk dezelfde dimensies hebben om te worden afgetrokken van elkaar... suffert")
    #     return matrix3    
            

vectorList1 = ([1,2,3],[4,5,6])
vectorList2 = ([1,1,],[1,1],[1,1])

matrix1 = Matrix(vectorList1)
matrix2 = Matrix(vectorList2)
matrix3 = matrix1*matrix2
print(matrix3)

